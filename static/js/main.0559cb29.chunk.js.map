{"version":3,"sources":["components/Timeline.js","components/DateSlider.js","Helper.js","App.js","index.js"],"names":["Timeline","series","options","id","type","height","sliderTheme","createMuiTheme","overrides","MuiSlider","thumb","color","track","rail","opacity","tooltipTheme","MuiTooltip","tooltip","fontSize","backgroundColor","fontWeight","ValueLabelComponent","props","children","open","value","ThemeProvider","theme","Tooltip","enterTouchDelay","placement","title","DateSlider","min","max","onChange","Slider","valueLabelFormat","moment","Date","format","defaultValue","minDate","getTime","maxDate","newGarageData","getPlanes","planes","map","air","obj","hasOwnProperty","push","x","y","fillColor","strokeColor","createTimelineData","result","Object","keys","name","data","createOptions","colors","dataLabels","enabled","formatter","val","ops","a","diff","seriesIndex","toString","length","indexOf","chart","locales","ru","defaultLocale","plotOptions","bar","horizontal","barHeight","xaxis","labels","yaxis","show","style","stroke","width","fill","legend","itemMargin","vertical","position","onItemClick","toggleDataSeries","App","state","date","className","this","item","index","key","blocks","minTime","dates","maxTime","currentTime","display","alignItems","justifyContent","top","left","w","h","textAlign","fly","event","setState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0559cb29.chunk.js","sourcesContent":["import React from 'react';\r\nimport Chart from \"react-apexcharts\";\r\n\r\nexport default function Timeline({series, options}) {\r\n\t\treturn (\r\n\t\t\t<div id=\"chart\">\r\n\t\t\t\t<Chart options={options} series={series} type=\"rangeBar\" height={350} />\r\n\t\t\t</div>\r\n\t\t)\r\n}","import React from 'react';\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport {ThemeProvider} from \"@material-ui/styles\";\r\nimport {createMuiTheme} from \"@material-ui/core/styles\";\r\nimport moment from \"moment\";\r\n\r\nconst sliderTheme = createMuiTheme({\r\n  overrides: {\r\n    MuiSlider: {\r\n      thumb: {\r\n        color: \"rgb(0, 143, 251)\",\r\n      },\r\n      track: {\r\n        color: 'rgb(0, 143, 251)',\r\n        height: 1.5,\r\n      },\r\n      rail: {\r\n        color: 'rgb(229,229,229)',\r\n        opacity: 1,\r\n        height: 1.5,\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nconst tooltipTheme = createMuiTheme({\r\n  overrides: {\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        fontSize: 12,\r\n        color: \"rgb(0, 143, 251)\",\r\n        backgroundColor: \"rgba(0, 0, 0, 0)\",\r\n        fontWeight: 600,\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nfunction ValueLabelComponent(props) {\r\n  const {children, open, value} = props;\r\n  return (\r\n    <ThemeProvider theme={tooltipTheme}>\r\n      <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n        {children}\r\n      </Tooltip>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default function DateSlider({min, max, onChange}) {\r\n  return (\r\n    <ThemeProvider theme={sliderTheme}>\r\n      <Slider\r\n        valueLabelFormat={(value) => moment(new Date(value)).format(\"DD.MM.YYYY\")}\r\n        ValueLabelComponent={ValueLabelComponent}\r\n        defaultValue={(min + max) / 2}\r\n        min={min}\r\n        max={max}\r\n        onChange={onChange}\r\n      />\r\n    </ThemeProvider>\r\n  )\r\n}","import moment from \"moment\";\r\nimport ru from \"apexcharts/dist/locales/ru.json\"\r\n\r\nexport const minDate = new Date('2020-08-15').getTime()\r\nexport const maxDate = new Date('2020-12-15').getTime()\r\n\r\nexport function getAvgDate(min, max) {\r\n  return moment(new Date((min+ max) / 2)).format(\"DD.MM.YYYY\")\r\n}\r\n\r\nexport const newGarageData = {\r\n  'DME': {\r\n    'width': 300,\r\n    'height': 80,\r\n    'blocks': [{\r\n      'x': 0,\r\n      'y': 0,\r\n      'dates': ['2020-11-18', '2020-12-13'],\r\n      'h': 73.3,\r\n      'w': 69.1,\r\n      'fly': 'Ан-124',\r\n      'color': '#ffa700'\r\n    }, {\r\n      'x': 70.1,\r\n      'y': 0,\r\n      'dates': ['2020-08-26', '2020-10-19'],\r\n      'h': 60.105,\r\n      'w': 63.939,\r\n      'fly': 'Ил-96-400',\r\n      'color': '#ff00d6'\r\n    }, {\r\n      'x': 135.039,\r\n      'y': 0,\r\n      'dates': ['2020-09-12', '2020-09-27'],\r\n      'h': 57.66,\r\n      'w': 55.345,\r\n      'fly': 'Ил-96-300',\r\n      'color': '#9a00ff'\r\n    }, {\r\n      'x': 191.384,\r\n      'y': 0,\r\n      'dates': ['2020-09-15', '2020-11-30'],\r\n      'h': 37.55,\r\n      'w': 47.9,\r\n      'fly': 'Ту-154М',\r\n      'color': '#c3ff00'\r\n    }, {\r\n      'x': 191.384,\r\n      'y': 38.55,\r\n      'dates': ['2020-09-03', '2020-09-28'],\r\n      'h': 29.2,\r\n      'w': 23.53,\r\n      'fly': 'Ан-24',\r\n      'color': '#00d8ff'\r\n    }]\r\n  },\r\n  'SVO': {\r\n    'width': 200,\r\n    'height': 90,\r\n    'blocks': [{\r\n      'x': 0,\r\n      'y': 0,\r\n      'dates': ['2020-10-10', '2020-11-13'],\r\n      'h': 73.3,\r\n      'w': 69.1,\r\n      'fly': 'Ан-124',\r\n      'color': '#ffa700'\r\n    }, {\r\n      'x': 70.1,\r\n      'y': 0,\r\n      'dates': ['2020-10-01', '2020-11-27'],\r\n      'h': 60.105,\r\n      'w': 63.939,\r\n      'fly': 'Ил-96-400',\r\n      'color': '#ff00d6'\r\n    }, {\r\n      'x': 135.039,\r\n      'y': 0,\r\n      'dates': ['2020-09-08', '2020-10-15'],\r\n      'h': 55.345,\r\n      'w': 57.66,\r\n      'fly': 'Ил-96-300',\r\n      'color': '#9a00ff'\r\n    }, {\r\n      'x': 135.039,\r\n      'y': 56.345,\r\n      'dates': ['2020-10-26', '2020-11-27'],\r\n      'h': 29.2,\r\n      'w': 23.53,\r\n      'fly': 'Ан-24',\r\n      'color': '#00d8ff'\r\n    }]\r\n  },\r\n  'VKO': {\r\n    'width': 150,\r\n    'height': 70,\r\n    'blocks': [{\r\n      'x': 0,\r\n      'y': 0,\r\n      'dates': ['2020-08-31', '2020-11-09'],\r\n      'h': 60.105,\r\n      'w': 63.939,\r\n      'fly': 'Ил-96-400',\r\n      'color': '#ff00d6'\r\n    }, {\r\n      'x': 64.939,\r\n      'y': 0,\r\n      'dates': ['2020-10-04', '2020-10-13'],\r\n      'h': 57.66,\r\n      'w': 55.345,\r\n      'fly': 'Ил-96-300',\r\n      'color': '#9a00ff'\r\n    }]\r\n  },\r\n}\r\n\r\nfunction getPlanes() {\r\n  let planes = {}\r\n  let airNames = [\"DME\", \"SVO\", \"VKO\"]\r\n\r\n  // eslint-disable-next-line array-callback-return\r\n  airNames.map((air) => {\r\n    // eslint-disable-next-line array-callback-return\r\n    newGarageData[air]['blocks'].map((obj) => {\r\n      if (!(planes.hasOwnProperty(obj['fly']))) planes[obj['fly']] = []\r\n      planes[obj['fly']].push({\r\n        x: air,\r\n        y: [\r\n          new Date(obj['dates'][0]).getTime(),\r\n          new Date(obj['dates'][1]).getTime()\r\n        ],\r\n        fillColor: obj['color'],\r\n        strokeColor: obj['color'],\r\n      })\r\n    })\r\n  })\r\n\r\n  return planes\r\n}\r\n\r\nexport function createTimelineData() {\r\n  let planes = getPlanes()\r\n  let result = []\r\n  // eslint-disable-next-line array-callback-return\r\n  Object.keys(planes).map((name) => {\r\n    result.push({name, data: planes[name]})\r\n  })\r\n\r\n  return result\r\n}\r\n\r\nexport function createOptions() {\r\n  let planes = getPlanes();\r\n  let colors = []\r\n\r\n  // eslint-disable-next-line array-callback-return\r\n  Object.keys(planes).map((name) => {\r\n    colors.push(planes[name][0]['fillColor'])\r\n  })\r\n\r\n  planes = Object.keys(planes)\r\n  return {\r\n    colors,\r\n    dataLabels: {\r\n      enabled: true,\r\n      formatter: function (val, ops) {\r\n        let a = moment(val[0])\r\n        let b = moment(val[1])\r\n        let diff = b.diff(a, 'days')\r\n\r\n        let name = (diff >= 15) ? planes[ops.seriesIndex] + ' : ' : ''\r\n        if (diff.toString()[diff.toString().length - 1] === \"1\") {\r\n          return name + diff + ' день'\r\n        } else if (\"234\".indexOf(diff.toString()[diff.toString().length - 1]) !== -1) {\r\n          return name + diff + ' дня'\r\n        } else {\r\n          return name + diff + ' дней';\r\n        }\r\n      }\r\n    },\r\n    chart: {\r\n      locales: [ru],\r\n      defaultLocale: 'ru',\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n        barHeight: '80%',\r\n      }\r\n    },\r\n    xaxis: {\r\n      type: 'datetime',\r\n      labels: {\r\n        formatter: function (value) {\r\n          return moment(value).format(\"DD.MM.YYYY\")\r\n        },\r\n      },\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: true,\r\n        style: {\r\n          fontSize: '16px',\r\n        }\r\n      }\r\n    },\r\n    stroke: {\r\n      width: 1\r\n    },\r\n    fill: {\r\n      type: 'solid',\r\n      opacity: 0.6\r\n    },\r\n    legend: {\r\n      itemMargin: {\r\n        horizontal: 25,\r\n        vertical: 0\r\n      },\r\n      position: 'top',\r\n      onItemClick: {\r\n        toggleDataSeries: false\r\n      },\r\n    }\r\n  }\r\n}","import React from 'react';\r\n\r\nimport Timeline from \"./components/Timeline\"\r\nimport DateSlider from './components/DateSlider';\r\nimport moment from \"moment\"\r\nimport {createOptions, createTimelineData, newGarageData, minDate, maxDate, getAvgDate} from \"./Helper\";\r\n\r\nimport './App.css';\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: getAvgDate(minDate, maxDate),\r\n      series: createTimelineData(),\r\n      options: createOptions(),\r\n      air: [\"DME\", \"SVO\", \"VKO\"]\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"App\">\r\n          <div className=\"window\">\r\n            <div className=\"garages\">\r\n              {/*Garage for drawing airplanes*/}\r\n              {this.state.air.map((item, index) => {\r\n                return (\r\n                    <div key={index}>\r\n                      <p className=\"garage-label\">{item}</p>\r\n                      <div className=\"garage inactive\"\r\n                           style={{width: newGarageData[item].width, height: newGarageData[item].height}}>\r\n                        {/* eslint-disable-next-line array-callback-return */}\r\n                        {newGarageData[item].blocks.map((obj, index) => {\r\n                          let minTime = moment(obj.dates[0], 'YYYY-MM-DD')\r\n                          let maxTime = moment(obj.dates[1], 'YYYY-MM-DD')\r\n                          let currentTime = moment(this.state.date, '\"DD.MM.YYYY\"')\r\n\r\n                          if (currentTime >= minTime && currentTime <= maxTime)\r\n                            return (\r\n                                <div key={index} className=\"fly\" style={{\r\n                                  display: \"flex\",\r\n                                  alignItems: \"center\",\r\n                                  justifyContent: \"center\",\r\n                                  top: obj.y,\r\n                                  left: obj.x,\r\n                                  backgroundColor: obj.color,\r\n                                  width: obj.w,\r\n                                  height: obj.h\r\n                                }}>\r\n                                  <p style={{\r\n                                    textAlign: \"center\",\r\n                                    color: \"#ffffff\",\r\n                                    fontWeight: 500,\r\n                                    fontSize: 16 * obj.h / 73.3\r\n                                  }}>{obj.fly}</p>\r\n                                </div>)\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                )\r\n              })}\r\n            </div>\r\n\r\n            {/*Timeline*/}\r\n            <div className=\"timeline\">\r\n              <Timeline series={this.state.series} options={this.state.options}/>\r\n\r\n              {/*Date slider picker*/}\r\n              <div className=\"data-picker\">\r\n                <DateSlider\r\n                    min={minDate}\r\n                    max={maxDate}\r\n                    onChange={(event, value) => {\r\n                      let date = moment(new Date(value)).format(\"DD.MM.YYYY\")\r\n                      this.setState({date})\r\n                    }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\t<App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}